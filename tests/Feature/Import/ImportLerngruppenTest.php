<?php

namespace Tests\Feature\Import;

use App\Models\{Fach, Klasse, User};
use App\Services\DataImportService;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ImportLerngruppenTest extends TestCase
{
    use RefreshDatabase;

    public const TABLE = 'lerngruppen';
    public const RELATED_TABLE = 'lerngruppe_user';

    /**
     * It creates lerngruppe with fach and klasse
     *
     * @return void
     */
    public function test_it_creates_lerngruppe_with_fach_and_klasse(): void
    {
        Fach::factory()->create();
        Klasse::factory()->create();
        User::factory()->create(['ext_id' => 1]);
        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 1,
                    "fachID": 1,
                    "kursartID": null,
                    "bezeichnung": "M-GK2",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 1)
            ->assertDatabaseHas(self::TABLE, [
                'id' => 1,
                'bezeichnung' => 'M-GK2',
                'fach_id' => 1,
                'klasse_id' => 1,
            ])
            ->assertDatabaseCount(self::RELATED_TABLE, 1)
            ->assertDatabaseHas(self::RELATED_TABLE, [
                'user_id' => 1,
                'lerngruppe_id' => 1,
            ]);
    }

    /**
     * It creates lerngruppe with fach and kurs
     *
     * @return void
     */
    public function test_it_creates_lerngruppe_with_fach_and_kurs(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 123,
                    "fachID": 1,
                    "kursartID": 123,
                    "bezeichnung": "M-GK2",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 1)
            ->assertDatabaseHas(self::TABLE, [
                'id' => 1,
                'bezeichnung' => 'M-GK2',
                'fach_id' => 1,
                'klasse_id' => null,
            ]);
    }

    /**
     * It does not create lerngruppe with missing id
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_missing_id(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "kID": 18933,
                    "fachID": 69,
                    "kursartID": 71,
                    "bezeichnung": "M-GK2",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with empty id
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_empty_id(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": null,
                    "kID": 18933,
                    "fachID": 69,
                    "kursartID": 71,
                    "bezeichnung": "M-GK2",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with negative id
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_negative_id(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": -1,
                    "kID": 18933,
                    "fachID": 69,
                    "kursartID": 71,
                    "bezeichnung": "M-GK2",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with non integer id
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_non_integer_id(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": "X",
                    "kID": 18933,
                    "fachID": 69,
                    "kursartID": 71,
                    "bezeichnung": "M-GK2",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with missing "Bezeichnung"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_missing_bezeichnung(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 69,
                    "kursartID": 71,
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }
    /**
     * It does not create lerngruppe with empty "Bezeichnung"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_empty_bezeichnung(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 69,
                    "kursartID": 71,
                    "bezeichnung": null,
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with missing "fachID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_missing_fachId(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with empty "fachID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_empty_fachId(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": null,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with non exsisting "Fach"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_non_existing_fach(): void
    {
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with missing "kID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_missing_kid(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with empty "kID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_empty_kid(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": null,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with negative "kID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_negative_kid(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": null,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": -1
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with non integer "kID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_non_integer_kid(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": null,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": "X"
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It creates lerngruppe when kursartID is null and "Klasse" exists
     *
     * @return void
     */
    public function test_it_creates_lerngruppe_when_kursartId_is_null_and_klasse_exist(): void
    {
        Fach::factory()->create();
        Klasse::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 1,
                    "fachID": 1,
                    "kursartID": null,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 1)
            ->assertDatabaseHas(self::TABLE, [
                'id' => 1,
                'klasse_id' => 1,
            ]);
    }

    /**
     * It does not create lerngruppe when kursartID is null and "Klasse" does not exist
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_when_kursartId_is_null_an_klasse_does_not_exist(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 1,
                    "fachID": 1,
                    "kursartID": null,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": 3
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with missing "wochenstunden"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_missing_wochenstunden(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ]
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with empty "wochenstunden"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_empty_wochenstunden(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": null
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with negative "wochenstunden"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_negative_wochenstunden(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": -1
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with non integer "wochenstunden"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_non_integer_wochenstunden(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        1
                    ],
                    "wochenstunden": "X"
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with missing "lehrerID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_missing_lehrerId(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "wochenstunden": 1
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with empty "lehrerID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_empty_lehrerId(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": null,
                    "wochenstunden": 1
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe with no elements in "lehrerID"
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_with_no_elements_in_lehrerId(): void
    {
        Fach::factory()->create();
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [],
                    "wochenstunden": 1
                }
            ]
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It does not create lerngruppe when related lehrer do not exist
     *
     * @return void
     */
    public function test_it_does_not_create_lerngruppe_when_related_lehrer_do_not_exist(): void
    {
        User::factory()->create(['id' => 1]);
        User::factory()->create(['ext_id' => 1]);

        $data = json_decode('{
            "lerngruppen": [
                {
                    "id": 1,
                    "kID": 18933,
                    "fachID": 1,
                    "kursartID": 71,
                    "bezeichnung": "Lorem ipsum",
                    "kursartKuerzel": "GK",
                    "bilingualeSprache": "D",
                    "lehrerID": [
                        2
                    ],
                    "wochenstunden": 1
                }
            ]
        }', true);
        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It returns when the "lerngruppen" array is empty
     *
     * @return void
     */
    public function test_it_returns_when_the_lerngruppen_array_is_missing(): void
    {
        $data = json_decode('{}', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }

    /**
     * It returns when the "lerngruppen" array is empty
     *
     * @return void
     */
    public function test_it_returns_when_the_lerngruppen_array_is_empty(): void
    {
        $data = json_decode('{
            "lerngruppen": []
        }', true);

        new DataImportService($data);

        $this->assertDatabaseCount(self::TABLE, 0);
    }
}
